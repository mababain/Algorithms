// Витя работает недалеко от одной из станций кольцевой линии Московского метро, а живет рядом с другой станцией той же линии. Требуется выяснить, мимо какого наименьшего количества промежуточных станций необходимо проехать Вите по кольцу, чтобы добраться с работы домой.

// Формат ввода:
// Станции пронумерованы подряд натуральными числами 1, 2, 3, …, N (1-я станция – соседняя с N-й), N не превосходит 100.

// Вводятся три числа: сначала N – общее количество станций кольцевой линии, а затем i и j – номера станции, на которой Витя садится, и станции, на которой он должен выйти. Числа i и j не совпадают. Все числа разделены пробелом.

// Формат вывода:
// Требуется выдать минимальное количество промежуточных станций (не считая станции посадки и высадки), которые необходимо проехать Вите.

// Пример 1
// Ввод	Вывод: 0
// 100 5 6
// Пример 2
// Ввод	Вывод: 1
// 10 1 9

// Примечания
// Пояснения к примерам:

// 1) На кольцевой линии 100 станций; проехать с 5-й на 6-ю станцию Витя может напрямую, без промежуточных станций

// 2) На кольцевой линии 10 станций; проехать с 1-й на 9-ю станцию Витя может через одну промежуточную, ее номер 10

function finalVerdict(data) {
  const [count, start, final] = data
    .toString()
    .split(' ')
    .map((x) => +x)
  const rfinal = Math.max(final, start)
  const rstart = Math.min(final, start)
  const i = Math.abs(rfinal - rstart - 1)
  const j = Math.abs(count + rstart - rfinal - 1)
  return Math.min(i, j)
}

process.stdin.on('data', (data) => {
  const result = finalVerdict(data)
  process.stdout.write(result + '')
  process.exit()
})
